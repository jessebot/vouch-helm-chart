# Default values for vouch.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- how many pod replicas to deploy
replicaCount: 1

image:
  repository: quay.io/vouch/vouch-proxy
  # -- change the tag we use for the vouch docker image
  tag: ''
  # -- image pullPolicy, set to always if using an image with the latest tag
  pullPolicy: IfNotPresent

# -- Allow to specify an alternate command before launching vouch
# example: command: ['/bin/sh', '-c', 'source /vault/secrets/config && /vouch-proxy']
command: []
# -- arguments to command for container
args: []

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

# -- securityContext for the pod. see more: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
  # fsGroup: 2000

# -- securityContext for the container. see more: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext: {}
  # privileged: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  externalTrafficPolicy:
  type: ClusterIP
  port: 9090

probes:
  liveness:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  readiness:
    enabled: true
    initialDelaySeconds: 0
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
    periodSeconds: 10
  startup:
    enabled: true
    initialDelaySeconds: 5
    failureThreshold: 30
    periodSeconds: 10


ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: 'true'
  paths: ['/']
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}

deploymentAnnotations: {}

# vouch config
# bare minimum to get vouch running with google

config:
  # -- Allow overriding the ENTIRE config.yaml value with an existing secret, 
  # like a sealed secret. If not empty string, ALL  values under config are ignored
  # except for config.existing. For all possible config.yaml values, see:
  # https://github.com/vouch/vouch-proxy/blob/master/config/config.yml_example
  overrideConfigExistingSecret: ''

  vouch:
    # --  logging level for vouch
    logLevel: debug
    # -- if you enable this, it will    force all 302 redirects to be rendered as a webpage with a link
    testing: false
    # -- the container port for vouch
    port: 9090
    # -- specific domains you'd like to allow access from
    domains: []
    # -- list of emails for users that allowed to use SSO via vouch
    whiteList: []
    # -- whether or not to allow ALL users to login
    allowAllUsers: false
    jwt:
      # -- pass in a secret to used for cookies
      secret: ''
    # -- existingSecret for domains, whiteList, and jwtSecret. If this value is
    # not empty, we ignore vouch.domains, vouch.whiteList, and vouch.jwt.secret
    existingSecret: ''
    # keys in vouch.existingSecret to use for vouch config
    secretKeys:
      # -- secret key in vouch.existingSecret with comma seperated list of
      # domains you'd like to allow access from. Example secret value in your
      # existing secret: 'coolcats.com,cooldogs.com'
      domains: 'domains'
      # -- secret key in vouch.existingSecret with comma seperated list of emails
      # for users that allowed to use SSO via vouch. Example secret value in your
      # 'friend@coolcats.com,kitty@coolcats.com'
      whiteList: 'whiteList'
      # -- secret key in vouch.existingSecret to pass in a secret to used for cookies
      jwtSecret: 'jwtSecret'

  # https://console.developers.google.com/apis/credentials
  oauth:
    # -- oauth2 provider, such as keycloak
    provider: ''
    # -- clientID from  your provider
    clientId: ''
    # -- clientSecret from your provider
    clientSecret: ''
    # -- authentication url from your oidc provider
    authUrl: ''
    # -- token url from your oidc provider
    tokenUrl: ''
    # -- user info Url from your oidc provider
    userInfoUrl: ''
    # -- array of scopes to get from the provider e.g. [openid, email, profile]
    scopes: []
    # -- valid callback urls to use, example https://vouch.example.com/auth
    callbackUrls: []
    # -- preferred domain
    preferredDomain: ''
    # -- existingSecret for clientId, clientSecret, authUrl, tokenUrl,
    # userInfoUrl, scopes, callbackUrls, and preferredDomain. If this value
    # is not empty, we will ignore all of those plain text values and only use
    # your secret keys
    existingSecret: ''
    # keys in oauth.existingSecret to use for Oauth2 config
    secretKeys:
      # -- secret key in oauth.existingSecret for the clientID from your provider
      clientId: 'clientId'
      # -- secret key in oauth.existingSecret for clientSecret from your provider
      clientSecret: 'clientSecret'
      # -- secret key in oauth.existingSecret for authentication url from your oidc provider
      authUrl: 'authUrl'
      # -- secret key in oauth.existingSecret for token url from your oidc provider
      tokenUrl: 'tokenUrl'
      # -- secret key in oauth.existingSecret for userInfoUrl from your oidc provider
      userInfoUrl: 'userInfoUrl'
      # -- secret key in oauth.existingSecret for commas seperated list of valid
      # callback urls to use, example value for your key in your existing secert:
      # 'https://vouch.example.com/auth,https://vouch.example.com/login'
      callbackUrls: 'callbackUrls'
      # -- secret key in oauth.existingSecret for your preferred domain
      preferredDomain: 'preferredDomain'

# -- An array to add extra environment variables
extraEnvVars: []
# Example:
#   - name: HTTPS_PROXY
#     value: 'https://example.com'
