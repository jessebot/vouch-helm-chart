# Default values for vouch.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- how many pod replicas to deploy
replicaCount: 1

image:
  repository: quay.io/vouch/vouch-proxy
  # -- change the tag we use for the vouch docker image
  tag: ""
  # -- image pullPolicy, set to always if using an image with the latest tag
  pullPolicy: IfNotPresent

# -- Allow to specify an alternate command before launching vouch
# example: command: ["/bin/sh", "-c", "source /vault/secrets/config && /vouch-proxy"]
command: []
# -- arguments to command for container
args: []

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

# -- securityContext for the pod. see more: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
  # fsGroup: 2000

# -- securityContext for the container. see more: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext: {}
  # privileged: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  externalTrafficPolicy:
  type: ClusterIP
  port: 9090

probes:
  liveness:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  readiness:
    enabled: true
    initialDelaySeconds: 0
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
    periodSeconds: 10
  startup:
    enabled: true
    initialDelaySeconds: 5
    failureThreshold: 30
    periodSeconds: 10


ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  paths: ["/"]
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}

deploymentAnnotations: {}

# vouch config
# bare minimum to get vouch running with google

config:
  # -- Allow overriding the config value with an existing secret, like a sealed secret
  existingSecretName: ""

  vouch:
    # -- the container port for vouch
    port: 9090
    # -- specific domains you'd like to allow access from
    domains: []
    # -- wheather or not to allow ALL users to login
    allowAllUsers: false
    # -- list of emails for users that allowed to use SSO via vouch
    whiteList: []
    jwt:
      # -- pass in a secret to used for cookies
      secret: ''
    # -- set to true to enable a testing mode, see more: https://github.com/vouch/vouch-proxy#im-getting-an-infinite-redirect-loop-which-returns-me-to-my-idp-googleoktagithub
    testing: false

  # https://console.developers.google.com/apis/credentials
  oauth:
    # -- oauth2 provider, such as keycloak
    provider: ""
    # -- clientID from  your provider
    client_id: ""
    # -- clientSecret from your provider
    client_secret: ""
    # -- valid callback urls to use, example https://vouch.example.com/auth
    callback_urls: []
    # -- preferred domain
    preferredDomain: ""

# -- An array to add extra environment variables
extraEnvVars: []
# Example:
#   - name: HTTPS_PROXY
#     value: "https://example.com"
